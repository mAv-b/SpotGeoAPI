# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "The_Master" ]
  pull_request:
    branches: [ "The_Master" ]

jobs:
      
  build:

    runs-on: ubuntu-latest
    
    services:
      postgres/postgis:
        image: postgis/postgis
        env:
          POSTGRES_PASSWORD: postgres
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
    
    - name: Build Project
      run: npm run build --if-present
    
    - name: Connect to postgresSQL
      run: node ./build/src/database/init.js
      env:
        DATABASE: postgres
        DB_PORT: 5432
        DB_USERNAME: postgres
        PASSWORD: postgres
        HOST: localhost
    
    - run: npm run test:integration
      env:
        DATABASE: postgres
        DB_USERNAME: postgres
        PASSWORD: postgres
        HOST: postgres
        DB_PORT: 5432
        PORT: 3000
        JWT_SECRET_KEY: secret
